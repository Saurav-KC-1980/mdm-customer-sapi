<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<sub-flow name="customers_post-customers" doc:id="fd466c7c-0a82-4ab5-bb83-d4e4d9121cbd" >
		<ee:transform doc:name="Map to DB Columns" doc:id="7f3ea0ba-9766-4c3b-8a18-4ba11ba64075" >
			<ee:message >
				<ee:set-payload resource="dwl/customers-post-payload.dwl" />
			</ee:message>
		</ee:transform>
		<try doc:name="Try" doc:id="dc9264a1-8d5a-46b5-9691-c37e00fd86ad" >
			<db:stored-procedure doc:name="Call Customers_Create" doc:id="1ed65b70-e1db-4551-83c6-5d63367cdaa0" config-ref="mdm-db-config">
				<db:sql ><![CDATA[{ call Customers_Create(:customersRequestJSON,:customerId)}]]></db:sql>
				<db:input-parameters ><![CDATA[#[{
	customersRequestJSON : write(payload, "application/json")
}]]]></db:input-parameters>
				<db:output-parameters >
					<db:output-parameter key="customerId" type="NVARCHAR" />
				</db:output-parameters>
			</db:stored-procedure>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="52833dd6-0165-46e1-b158-4f664ab4b5f4" type="DB:BAD_SQL_SYNTAX, DB:QUERY_EXECUTION">
					<flow-ref doc:name="common-error-handler_connector-exception" doc:id="15310b44-926c-4b03-a0e3-e4cff3f41dd8" name="common-error-handler_connector-exception"/>
					<set-variable value="409" doc:name="httpStatus" doc:id="6c7fc100-66c9-4ab8-8ad1-81c1f2214a09" variableName="httpStatus" />
					<raise-error doc:name="FINS:DB_STORED_PROC_FAILURE" doc:id="6485b1b9-71eb-4f7d-b4af-095a9c83e423" type="FINS:DB_STORED_PROC_FAILURE" description="Failed to execute Stored Procedure" />
				</on-error-propagate>
			</error-handler>
		</try>
		<ee:transform xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd 
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd 
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="ae668616-cf37-41ed-9693-922cc34ae466" doc:name="Map Response">
			<ee:message>
				<ee:set-payload resource="dwl/individuals-success.dwl" />
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="httpStatus"><![CDATA[%dw 2.0
output application/java
---
201]]></ee:set-variable>
						<ee:set-variable resource="dwl/customers-create-response-headers.dwl" variableName="outboundHeaders" />
			
			</ee:variables>		
		</ee:transform>
	</sub-flow>
	
	<sub-flow name="customers_patch-customer" doc:id="b3fef144-f5f3-47d2-8bd3-b8eb996342c7" >
		<flow-ref doc:name="customers_get-customer" doc:id="b1c91070-769a-4249-ab97-6fe99e1a17b4" name="customers_get-customer" target="customerDBRecord"/>
		<choice doc:name="Choice" doc:id="a8be2ca8-5d8d-461a-88be-214347a70671" >
			<when expression="#[(vars.exceptionResponse == null) and (vars.customerDBRecord.errorCode == null)]">
				<ee:transform doc:name="Map to DB Columns" doc:id="ca1e5c87-c0dd-4715-9bef-c45c4a34de3e">
			<ee:message>
						<ee:set-payload resource="dwl/customers-patch-payload.dwl" />
			</ee:message>
		</ee:transform>
			<try doc:name="Try" doc:id="fd8fc2be-ba7a-4eb1-8b46-2b90c2e25041" >
			<db:update doc:name="Update Customer" doc:id="f1788851-7ff3-48de-b13d-60476f422ef6" config-ref="mdm-db-config">
				<db:sql ><![CDATA[update CUSTOMER set CHURN_SCORE = :churnScore, CUSTOMER_NUMBER = :customerNumber, CUSTOMER_SATISFACTION_SCORE = :customerSatisfactionScore, CUSTOMER_STATUS = :customerStatus, LAST12_MONTHS_SUPPORT_CALL_COUNT = :last12MonthsNewRevenueAmount, LAST24_MONTHS_NEW_REVENUE_AMOUNT = :last12MonthsSupportCallCount, LAST12_MONTHS_NEW_REVENUE_AMOUNT = :last24MonthsNewRevenueAmount, MARKETING_EMAIL_RESPONSE_RATE = :marketingEmailResponseRate, NET_PROMOTER_SCORE = :netPromoterScore, ORIGINATING_CUSTOMER_SOURCE = :originatingCustomerSource, PROSPECT_RATING = :prospectRating, TOTAL_BOOKINGS_AMOUNT = :totalBookingsAmount, TOTAL_CONTRACTED_AMOUNT = :totalContractedAmount, TOTAL_LIFE_TIME_VALUE = :totalLifeTimeValue, TOTAL_PROFIT_CONTRIBUTION_AMOUNT = :totalProfitContributionAmount, UPDATED_BY = :updatedBy, UPDATED_DATE = :updatedDate where ID=:id;]]></db:sql>
				<db:input-parameters ><![CDATA[#[payload]]]></db:input-parameters>
			</db:update>
			<ee:transform xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd 
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd 
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="680cd97b-0ab2-43f5-bc75-85d18c6684ba" doc:name="Map Response">
			<ee:message>
						<ee:set-payload resource="dwl/individuals-patch-message.dwl" />
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="httpStatus"><![CDATA[%dw 2.0
output application/java
---
if(payload.affectedRows==0) 400 else 200]]></ee:set-variable>
			</ee:variables>		
		</ee:transform>
					<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="6c3998e6-ed5d-4342-bf39-6781fac3dd45" type="DB:BAD_SQL_SYNTAX, DB:QUERY_EXECUTION">
					<set-variable value="500" doc:name="httpStatus" doc:id="4a7da28f-9446-414d-a29c-be119c875b38" variableName="httpStatus" />
					<flow-ref doc:name="common-error-handler_connector-exception" doc:id="a307b3cf-2fb3-41d3-a927-bb087a12b209" name="common-error-handler_connector-exception"/>
					<raise-error doc:name="FINS:DB_STORED_PROC_FAILURE" doc:id="f59c2a67-5001-4cf0-b149-d39961e3f845" type="FINS:DB_STORED_PROC_FAILURE" description="Failed to execute Stored Procedure" />
				</on-error-propagate>
			</error-handler>
		</try>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="1235fab8-53bd-4986-ae57-72fcc55eb774" />
				<set-variable value="404" doc:name="httpStatus" doc:id="ba47e2c5-3f54-4654-8d9e-e2307d89601f" variableName="httpStatus"/>
				<flow-ref doc:name="common-error-handler_connector-exception" doc:id="1354a1f9-a7aa-401f-adff-4bd9869e2619" name="common-error-handler_connector-exception"/>
			</otherwise>
		</choice>
	</sub-flow>
	
	<sub-flow name="customers_get-customer" doc:id="a202a34b-14b1-441c-b53f-fe6fd5872e11" >
		<logger level="INFO" doc:name="Log Request" doc:id="7e96e326-59e8-477b-84a8-d9ee8c686a78" message="#[attributes.queryParams]"/>
		<try doc:name="Try" doc:id="fb1971aa-7b14-4f95-a997-c8df1f460a46" >
			<db:select doc:name="Select Customer Party Role" doc:id="30189d82-fce1-4564-b9b3-8a99c454b36c" config-ref="mdm-db-config">
			<db:sql><![CDATA[select  cust.CHURN_SCORE, cust.CREATED_BY, cust.CREATED_DATE, cust.CUSTOMER_NUMBER, cust.CUSTOMER_SATISFACTION_SCORE, cust.CUSTOMER_STATUS, cust.ID, cust.LAST12_MONTHS_SUPPORT_CALL_COUNT, cust.LAST24_MONTHS_NEW_REVENUE_AMOUNT, cust.LAST12_MONTHS_NEW_REVENUE_AMOUNT, cust.MARKETING_EMAIL_RESPONSE_RATE, cust.NET_PROMOTER_SCORE, cust.ORIGINATING_CUSTOMER_SOURCE, cust.PROSPECT_RATING, cust.TOTAL_BOOKINGS_AMOUNT, cust.TOTAL_CONTRACTED_AMOUNT, cust.TOTAL_LIFE_TIME_VALUE, cust.TOTAL_PROFIT_CONTRIBUTION_AMOUNT, cust.UPDATED_BY, cust.UPDATED_DATE , pr.PARTY_ROLE_TYPE, prpj.PARTY_ID,p.PARTY_TYPE  from CUSTOMER cust, CUSTOMER_PARTY_JOIN cpj ,PARTY_ROLE_PARTY_JOIN prpj ,PARTY_ROLE pr,PARTY p   where cust.ID = :customerId and cpj.CUSTOMER_ID = cust.ID and prpj.PARTY_ID = cpj.PARTY_ID and pr.ID = cust.ID and p.ID = cpj.PARTY_ID ]]></db:sql>
				<db:input-parameters ><![CDATA[#[customerId : vars.customerId]]]></db:input-parameters>
		</db:select>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="5dbcf914-b05c-4671-977c-060d9df1d586" type="DB:BAD_SQL_SYNTAX, DB:QUERY_EXECUTION">
					<flow-ref doc:name="common-error-handler_connector-exception" doc:id="549d4521-98fd-4a74-8f55-3d9360638cef" name="common-error-handler_connector-exception"/>
					<raise-error doc:name="FINS:DB_SELECT_FAILURE" doc:id="da1839fd-9792-4bd5-b107-cc3994205aa0" type="FINS:DB_SELECT_FAILURE" description="Failed to execute SELECT" />
				</on-error-propagate>
			</error-handler>
		</try>
		<try doc:name="Try" doc:id="5f200328-032a-4fb4-9228-188d8eff4a71">
			<validation:is-not-empty-collection doc:name="Is not empty collection" doc:id="30a79702-a97d-4db7-b6a3-9a71bc42f66c" message="Customer Party Role not found" />
			<error-handler>
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="dbd4e133-ebac-44ad-b4d0-ecb100abac4c">
					<set-variable value="404" doc:name="httpStatus 404" doc:id="8b7228fd-f1ee-40b5-bed6-d24547e1c2e8" variableName="httpStatus" />
				</on-error-propagate>
			</error-handler>
		</try>
		<ee:transform doc:name="partyRoleId and partyType" doc:id="22639a6f-d29c-43b8-bc3b-86ecc6660513">
					<ee:message>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="partyRoleId"><![CDATA[%dw 2.0
output application/java
---
vars.customerId]]></ee:set-variable>
						<ee:set-variable variableName="partyType"><![CDATA[%dw 2.0
output application/java
---
payload.PARTY_TYPE[0]]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
		<flow-ref doc:name="partyroles_get-externalids" doc:id="77b11d1e-6b7a-413b-b2b7-aca422de2b6d" name="partyroles_get-externalids" target="customerExternalIds" />
		<choice doc:name="Check if the request came from Search to fetch Indvidual details" doc:id="16a13172-eed0-4180-9178-b0d992f86148">
					<when expression="#[vars.searchFlag == null and vars.partyType=='Individual']">
						<set-variable value="#[payload.PARTY_ID[0]]" doc:name="individualId" doc:id="c34224df-cf14-4a38-9e1c-f5c987d25930" variableName="individualId" />
						<flow-ref doc:name="individuals_get-individual" doc:id="02284866-fe6e-4c30-a785-25d2c5f1ffe9" name="individuals_get-individual" target="partyRecord" />
					</when>
					<when expression="#[vars.searchFlag == null and vars.partyType=='Organization']">
						<set-variable value="#[payload.PARTY_ID[0]]" doc:name="organizationId" doc:id="897dbcb5-7ff8-4495-b177-ffaf831aaad6" variableName="organizationId" />
						<flow-ref doc:name="organizations_get-organization" doc:id="b96c8bcf-97c6-4579-b01f-5df6901e39fd" name="organizations_get-organization" target="partyRecord" />
					</when>
					<otherwise>
						<logger level="INFO" doc:name="Skip Individuals Call" doc:id="0859cfb8-4c8f-45ae-b6e7-051edf8c7ac3" message="From Search so skipping call to fetch Individual Details" />
					</otherwise>
				</choice>
		<ee:transform doc:name="Has Results" doc:id="3e926510-ec6c-4369-9c1f-5ad96078dc75">
			<ee:message>
						<ee:set-payload resource="dwl/customers-get-response.dwl" />
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Return First Object" doc:id="e212cd9d-441e-4ae5-994c-eafd6c1b4359">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload[0]]]></ee:set-payload>
					</ee:message>
				</ee:transform>
	</sub-flow>
	
	<sub-flow name="customers_get-customers-search" doc:id="a55211b2-13a1-471f-9256-f4b148eab2a1" >
		<logger level="INFO" doc:name="Log Request" doc:id="e68eb143-a7f7-4c14-9cfc-4946128b7d86" message="#[attributes.queryParams]"/>
		<ee:transform doc:name="Input Query Parameters" doc:id="a400a182-026d-492a-af7a-4081b423a84f" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="customerId" ><![CDATA[%dw 2.0
output application/java
---
attributes.queryParams.customerId]]></ee:set-variable>
				<ee:set-variable variableName="externalId" ><![CDATA[%dw 2.0
output application/java
---
attributes.queryParams.externalId]]></ee:set-variable>
				<ee:set-variable variableName="emailAddress" ><![CDATA[%dw 2.0
output application/java
---
attributes.queryParams.emailAddress]]></ee:set-variable>
				<ee:set-variable variableName="offset" ><![CDATA[%dw 2.0
output application/java
---
(attributes.queryParams.offset default p('mdm.database.default-offset')) as Number]]></ee:set-variable>
				<ee:set-variable variableName="limit" ><![CDATA[%dw 2.0
output application/java
---
(attributes.queryParams.limit default p('mdm.database.default-limit')) as Number]]></ee:set-variable>
<ee:set-variable variableName="outputDBRecords" ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-variable>
				<ee:set-variable variableName="searchFlag" ><![CDATA[%dw 2.0
output application/java
---
true]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Create Query based on Input Parameters" doc:id="5f127e5c-1178-4482-be5a-8196bfed8fad" >
			<ee:message >
				<ee:set-payload resource="dwl/customers-search-queries.dwl" />
			</ee:message>
			<ee:variables >
			</ee:variables>
		</ee:transform>
		<try doc:name="Try" doc:id="759defb9-f346-4a77-ab8f-cbfc8ff0a2ff" >
			<foreach doc:name="Execute All Queries in Sequence only if no results" doc:id="8a2a87a8-cc5d-4d43-987b-788b5cba6acf" collection="#[payload]">
				<choice doc:name="Check for Valid Query only if No Previous Results for previous query" doc:id="46e32925-8d9d-4728-b2e7-f566cd633039">
				<when expression="#[payload != null and (sizeOf(vars.outputDBRecords) == 0)]">
					<db:select doc:name="Select Parties on Input Params" doc:id="f7942e26-1be9-4c20-a2c6-c5ec76a35135" config-ref="mdm-db-config">
			<db:sql><![CDATA[#[payload]]]></db:sql>
		</db:select>
						<ee:transform doc:name="Transform Message" doc:id="b706af71-75f0-4e98-9f00-6352374acea0" >
							<ee:message >
							</ee:message>
							<ee:variables >
								<ee:set-variable resource="dwl/customers-search-outputDBRecords.dwl" variableName="outputDBRecords" />
							</ee:variables>
						</ee:transform>
				</when>
					<otherwise>
						<logger level="INFO" doc:name="No Records" doc:id="c732444d-ccfc-4c83-b419-d9eef5f17cbe" message="No Records"/>
				</otherwise>
			</choice>
			</foreach>
			<set-payload value="#[vars.outputDBRecords]" doc:name="Set outputDBRecords and Result" doc:id="086db276-e448-41f1-8eae-e1e07c9078c7" />
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="a51fc52a-777a-4b33-aa6b-389c2d8667fc" type="DB:BAD_SQL_SYNTAX, DB:QUERY_EXECUTION">
					<flow-ref doc:name="common-error-handler_connector-exception" doc:id="1f490f7f-7fcf-4f90-83bc-55ae667ae0e8" name="common-error-handler_connector-exception"/>
					<raise-error doc:name="FINS:DB_SELECT_FAILURE" doc:id="77984805-de57-4281-8307-e5efa3870d87" type="FINS:DB_SELECT_FAILURE" description="Failed to execute SELECT" />
				</on-error-propagate>
			</error-handler>
		</try>
		<ee:transform doc:name="Has Results" doc:id="8380ccf3-4175-4882-8ad9-62daf08bed60">
			<ee:message>
						<ee:set-payload resource="dwl/customers-search-response.dwl" />
			</ee:message>
		</ee:transform>
	</sub-flow>
	
	
	
</mule>
