/**
 * This script can be used to upgrade earlier versions of the database schema
 * to the latest release. Data may need to be adjusted to execute this script
 * successfully.
 *
 * Note: stored procedures must be dropped and recreated separately.
 */

/* Add support for households */
CREATE TABLE IF NOT EXISTS HOUSEHOLD (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  HOUSEHOLD_MEMBER_COUNT INTEGER,
  HOUSEHOLD_FORMED_DATE DATE,
  HOUSEHOLD_DISSOLVED_DATE DATE,
  PARTY_TYPE VARCHAR(500) NOT NULL,
  GLOBAL_PARTY VARCHAR(500),
  NO_MERGE_REASON VARCHAR(500),
  CREATED_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_BY VARCHAR(500) NOT NULL,
  UPDATED_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  UPDATED_BY VARCHAR(500) NOT NULL
);
ALTER TABLE HOUSEHOLD
ADD PRIMARY KEY (ID);

CREATE UNIQUE INDEX EXTERNAL_ID_PARTY_ROLE_IDX ON EXTERNAL_ID_PARTY_ROLE_JOIN(EXTERNAL_ID,PARTY_ROLE_ID);
CREATE UNIQUE INDEX PARTY_ROLE_PARTY_IDX ON PARTY_ROLE_PARTY_JOIN(PARTY_ID,PARTY_ROLE_ID);
CREATE UNIQUE INDEX EXTERNAL_ID_EXTERNAL_ID_TYPE_IDX ON EXTERNAL_ID(EXTERNAL_ID,EXTERNAL_ID_TYPE);
CREATE UNIQUE INDEX CONTACT_POINT_ADDRESS_PARTY_IDX ON CONTACT_POINT_ADDRESS_PARTY_JOIN(CONTACT_POINT_ADDRESS_ID,PARTY_ID);
CREATE UNIQUE INDEX CONTACT_POINT_EMAIL_PARTY_IDX ON CONTACT_POINT_EMAIL_PARTY_JOIN(CONTACT_POINT_EMAIL_ID,PARTY_ID);
CREATE UNIQUE INDEX CONTACT_POINT_PHONE_PARTY_IDX ON CONTACT_POINT_PHONE_PARTY_JOIN(CONTACT_POINT_PHONE_ID,PARTY_ID);
CREATE UNIQUE INDEX EXTERNAL_ID_CONTACT_POINT_IDX ON EXTERNAL_ID_CONTACT_POINT_JOIN(EXTERNAL_ID,CONTACT_POINT_ID);
CREATE UNIQUE INDEX EXTERNAL_ID_PARTY_IDX ON EXTERNAL_ID_PARTY_JOIN(EXTERNAL_ID,PARTY_ID);
