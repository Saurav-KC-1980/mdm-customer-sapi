<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="households-suite.xml" />
	<munit:test name="households_post-households-test" doc:id="7930d009-a8d3-479e-a1b3-fa04c04d55bc" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Call Households_Upsert" doc:id="98c8a5c4-6a88-4712-ae95-e73fb902eb51" processor="db:stored-procedure">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Call Households_Upsert" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://munittest/householdsposthouseholdstest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://munittest/householdsposthouseholdstest/mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="0294f612-fbb7-4af0-aeea-6f5fc163bf67" >
				<munit:payload value="#[output application/json --- readUrl('classpath://munittest/householdsposthouseholdstest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://munittest/householdsposthouseholdstest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://munittest/householdsposthouseholdstest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to households_post-households" doc:id="1f082c72-e933-4872-b4f2-4d8aa765991e" name="households_post-households"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="be3fa49a-822e-4d50-9968-877308ef6344" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import munittest::householdsposthouseholdstest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="households_patch-household-test" doc:id="f327f409-8394-466d-b19c-4701f42907ff" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Call Households_Upsert" doc:id="f516c377-1a46-4341-8dd4-335fecf13c1d" processor="db:stored-procedure">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Call Households_Upsert" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://munittest/householdspatchhouseholdtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://munittest/householdspatchhouseholdtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="householdId" value="#[output application/java --- readUrl('classpath://munittest/householdspatchhouseholdtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="householdDBRecord" value="#[output application/json --- readUrl('classpath://munittest/householdspatchhouseholdtest/mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock households_get-household" doc:id="68048d6e-6d34-4b36-ac8c-13a2c451e5ff" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="households_get-household" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://munittest/householdspatchhouseholdtest/mock_payload1.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://munittest/householdspatchhouseholdtest/mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://munittest/householdspatchhouseholdtest/mock_variable_3.dwl')]" />
						<munit-tools:variable key="householdId" value="#[output application/java --- readUrl('classpath://munittest/householdspatchhouseholdtest/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="householdDBRecord" value="#[output application/json --- readUrl('classpath://munittest/householdspatchhouseholdtest/mock_variable_5.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="01731a3b-96b3-46a6-a11b-a92f03f0f81b" >
				<munit:payload value="#[output application/json --- readUrl('classpath://munittest/householdspatchhouseholdtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://munittest/householdspatchhouseholdtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://munittest/householdspatchhouseholdtest/set-event_variable_.dwl')]" />
					<munit:variable key="householdId" value="#[output application/java --- readUrl('classpath://munittest/householdspatchhouseholdtest/set-event_variable_1.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to households_patch-household" doc:id="06fc50a1-8bc0-468f-8433-8e04bb800ac2" name="households_patch-household"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="e6059ac4-5a90-4dc9-9dbf-c5e333190dd5" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import munittest::householdspatchhouseholdtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="households_get-households-search-test" doc:id="4e7d16f9-fedd-4be0-97da-a38e00195056" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select Parties on Input Params" doc:id="d375607e-264b-493d-b21e-8cb51d677d04" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Select Parties on Input Params" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://munittest/householdsgethouseholdssearchtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://munittest/householdsgethouseholdssearchtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="householdId" value="#[output application/java --- readUrl('classpath://munittest/householdsgethouseholdssearchtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="rootMessage" value="#[readUrl('classpath://munittest/householdsgethouseholdssearchtest/mock_variable_2.dwl')]" />
						<munit-tools:variable key="offset" value="#[output application/java --- readUrl('classpath://munittest/householdsgethouseholdssearchtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="limit" value="#[output application/java --- readUrl('classpath://munittest/householdsgethouseholdssearchtest/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="externalId" value="#[output application/java --- readUrl('classpath://munittest/householdsgethouseholdssearchtest/mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="counter" value="#[readUrl('classpath://munittest/householdsgethouseholdssearchtest/mock_variable_6.dwl')]" />
						<munit-tools:variable key="outputDBRecords" value="#[output application/java --- readUrl('classpath://munittest/householdsgethouseholdssearchtest/mock_variable_7.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="a2230153-d55e-476e-a5e1-634b6ef49300" >
				<munit:payload value="#[readUrl('classpath://munittest/householdsgethouseholdssearchtest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://munittest/householdsgethouseholdssearchtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://munittest/householdsgethouseholdssearchtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to households_get-households-search" doc:id="4e4ac04e-0ada-4c3f-832f-33feadb8d8c7" name="households_get-households-search"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="c3206f23-f4c3-4434-9190-8070566a3071" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import munittest::householdsgethouseholdssearchtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>

</mule>
