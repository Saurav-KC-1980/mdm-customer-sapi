<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="parties-suite.xml" />
	<munit:test name="parties_get-parties-test" doc:id="1e6b3164-1c0b-4a43-a968-9c2722d8d236" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select Parties on Input Params" doc:id="e4720574-5ada-4b13-99d0-a2de6facda7b" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Select Parties on Input Params" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="mdm-db-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://munittest/partiesgetpartiestest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="externalIdType" value="#[output application/java --- readUrl('classpath://munittest/partiesgetpartiestest/mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://munittest/partiesgetpartiestest/mock_variable_1.dwl')]" />
						<munit-tools:variable key="partyType" value="#[output application/java --- readUrl('classpath://munittest/partiesgetpartiestest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="rootMessage" value="#[readUrl('classpath://munittest/partiesgetpartiestest/mock_variable_3.dwl')]" />
						<munit-tools:variable key="offset" value="#[output application/java --- readUrl('classpath://munittest/partiesgetpartiestest/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="limit" value="#[output application/java --- readUrl('classpath://munittest/partiesgetpartiestest/mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="externalId" value="#[output application/java --- readUrl('classpath://munittest/partiesgetpartiestest/mock_variable_6.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="counter" value="#[readUrl('classpath://munittest/partiesgetpartiestest/mock_variable_7.dwl')]" />
						<munit-tools:variable key="outputDBRecords" value="#[output application/java --- readUrl('classpath://munittest/partiesgetpartiestest/mock_variable_8.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="emailAddress" value="#[output application/java --- readUrl('classpath://munittest/partiesgetpartiestest/mock_variable_9.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="partyId" value="#[output application/java --- readUrl('classpath://munittest/partiesgetpartiestest/mock_variable_10.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="70a9843a-60c0-449e-aec3-e6d87c25cc94" >
				<munit:payload value="#[readUrl('classpath://munittest/partiesgetpartiestest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://munittest/partiesgetpartiestest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://munittest/partiesgetpartiestest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to parties_get-parties" doc:id="e184dd52-2bd9-4fb2-a809-548293a0a9e2" name="parties_get-parties"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="0f52c4b6-0744-4dae-860e-8ab973cf03fc" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import munittest::partiesgetpartiestest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="parties_put-related-parties-test" doc:id="b7dc38a4-386b-480e-8153-cf4b1db3762f" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Call Parties_RelatedParties_Upsert" doc:id="7f142d3a-717f-4714-a60f-caeafe412566" processor="db:stored-procedure">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="6d3c1741-1a02-42f2-a4ba-f91391d3853a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://munittest/partiesputrelatedpartiestest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://munittest/partiesputrelatedpartiestest/mock_variable_.dwl')]" />
						<munit-tools:variable key="partyId" value="#[output application/java --- readUrl('classpath://munittest/partiesputrelatedpartiestest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="69e3b4ef-6c6b-439d-ba9d-db9a71495ee1" >
				<munit:payload value="#[output application/json --- readUrl('classpath://munittest/partiesputrelatedpartiestest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://munittest/partiesputrelatedpartiestest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://munittest/partiesputrelatedpartiestest/set-event_variable_.dwl')]" />
					<munit:variable key="partyId" value="#[output application/java --- readUrl('classpath://munittest/partiesputrelatedpartiestest/set-event_variable_1.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to parties_put-related-parties" doc:id="6d1abcbd-afcc-4866-9376-cf15e41d3ea0" name="parties_put-related-parties"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="c191a257-2719-430f-a82d-9ee6d65a7a62" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import munittest::partiesputrelatedpartiestest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="parties_get-related-parties-test" doc:id="a8489cb9-3967-49e0-aefd-01f72fd12e4c" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock parties_get-related-parties-externalids" doc:id="1d215276-b91f-4b6a-a069-a7a0ea269978" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b8093438-05f9-4db0-8256-217e48760dd6" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://munittest/partiesgetrelatedpartiestest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://munittest/partiesgetrelatedpartiestest/mock_variable_.dwl')]" />
						<munit-tools:variable key="relatedPartiesExternalIds" value="#[output application/json --- readUrl('classpath://munittest/partiesgetrelatedpartiestest/mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="partyExternalIds" value="#[output application/json --- readUrl('classpath://munittest/partiesgetrelatedpartiestest/mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="partyId" value="#[output application/java --- readUrl('classpath://munittest/partiesgetrelatedpartiestest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock parties_get-parties" doc:id="05f0ed3a-0d28-44f0-8726-5f47fdb12539" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="657e5564-5602-474d-be53-43f732735694" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://munittest/partiesgetrelatedpartiestest/mock_payload1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://munittest/partiesgetrelatedpartiestest/mock_variable_4.dwl')]" />
						<munit-tools:variable key="partyExternalIds" value="#[output application/json --- readUrl('classpath://munittest/partiesgetrelatedpartiestest/mock_variable_5.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="partyId" value="#[output application/java --- readUrl('classpath://munittest/partiesgetrelatedpartiestest/mock_variable_6.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Select Related Parties" doc:id="beab7752-d68b-48b0-a6c2-260f6959551a" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ce8e4625-2787-488b-945b-ef9661147c2f" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://munittest/partiesgetrelatedpartiestest/mock_payload2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://munittest/partiesgetrelatedpartiestest/mock_variable_7.dwl')]" />
						<munit-tools:variable key="partyId" value="#[output application/java --- readUrl('classpath://munittest/partiesgetrelatedpartiestest/mock_variable_8.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="d1e5f72c-ce59-4738-b748-0a9d3a4467f9" >
				<munit:payload value="#[readUrl('classpath://munittest/partiesgetrelatedpartiestest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://munittest/partiesgetrelatedpartiestest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://munittest/partiesgetrelatedpartiestest/set-event_variable_.dwl')]" />
					<munit:variable key="partyId" value="#[output application/java --- readUrl('classpath://munittest/partiesgetrelatedpartiestest/set-event_variable_1.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to parties_get-related-parties" doc:id="251d6393-0ede-4031-a459-2e72e7977b57" name="parties_get-related-parties"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="2a0172f7-83cd-4c29-b769-2bae046ac318" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import munittest::partiesgetrelatedpartiestest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>

</mule>
